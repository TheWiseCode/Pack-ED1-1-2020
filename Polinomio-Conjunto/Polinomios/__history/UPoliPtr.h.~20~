// ---------------------------------------------------------------------------

#ifndef UPoliPtrH
#define UPoliPtrH
// ---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <math.h>
#include "Funciones.h"

using namespace std;

struct NodoPoli {
	double coef;
	int exp;
	NodoPoli* sig;
};

class PoliPtr {
private:
	NodoPoli* ptrPoli;
	int nt; // numero de terminos

	// metodos privados
	NodoPoli* existe_exponente(int exp);
	NodoPoli* anterior(NodoPoli* p);
	void suprime(NodoPoli* p);

public:
	PoliPtr();
	bool es_cero();
	void poner_termino(double coef, int exp);
	double coeficiente(int exp);
	int exponente(int nro);
	int grado();
	int numero_terminos();
	PoliPtr *suma(PoliPtr *otro);
	PoliPtr *resta(PoliPtr *otro);
	string toStr();
	void derivar();
	void multiplicar_por_monomio(int coef, int exp);
	void multiplicar(PoliPtr *p);
	PoliPtr clon_estatico();
	PoliPtr* clon_dinamico();
	void sumar(PoliPtr* otro);

	PoliPtr* integral();
	double evaluar(double x);

};
#endif
